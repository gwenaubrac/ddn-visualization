hc_plotOptions(series = list(marker = list(symbol = "circle"))) %>%
hc_legend(title = list(text = "Region")) %>%
hc_xAxis(title = list(text = "Month")) %>%
hc_yAxis(title = list(text = "IR per 100 years"))
filtered_data <- hr_main %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri" &
model == "ITT")
p <- ggplotly(
ggplot(
data = filtered_data,
aes(
x = hr_estimate,
y = region
)
) + geom_point() + theme_bw() +
geom_errorbarh(aes(xmin = hr_ci_lower, xmax = hr_ci_upper, height = 0.05)) +
labs(
x = "HR (95% CI)",
y = "Region",
)
)
p <- plotly::layout(
p,
plot_bgcolor = "transparent",
paper_bgcolor = "transparent",
legend = list(bgcolor = "rgba(255,255,255,0)"),
dragmode = "false"
)
p
output$hr_at_plot <- renderPlotly({
filtered_data <- hr_main %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri" &
model == "AT")
p <- ggplotly(
ggplot(
data = filtered_data,
aes(
x = hr_estimate,
y = region
)
) + geom_point() + theme_bw() +
geom_errorbarh(aes(xmin = hr_ci_lower, xmax = hr_ci_upper, height = 0.05)) +
labs(
x = "HR (95% CI)",
y = "Region",
)
)
p <- plotly::layout(
p,
plot_bgcolor = "transparent",
paper_bgcolor = "transparent",
legend = list(bgcolor = "rgba(255,255,255,0)"),
dragmode = "false",
)
p
filtered_data <- hr_main %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri" &
model == "AT")
p <- ggplotly(
ggplot(
data = filtered_data,
aes(
x = hr_estimate,
y = region
)
) + geom_point() + theme_bw() +
geom_errorbarh(aes(xmin = hr_ci_lower, xmax = hr_ci_upper, height = 0.05)) +
labs(
x = "HR (95% CI)",
y = "Region",
)
)
p
View(filtered_data)
p <- plotly::layout(
p,
plot_bgcolor = "transparent",
paper_bgcolor = "transparent",
legend = list(bgcolor = "rgba(255,255,255,0)"),
dragmode = "false",
)
filtered_data <- hr_main %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri" &
model == "ITT")
p <- ggplotly(
ggplot(
data = filtered_data,
aes(
x = hr_estimate,
y = region
)
) + geom_point() + theme_bw() +
geom_errorbarh(aes(xmin = hr_ci_lower, xmax = hr_ci_upper, height = 0.05)) +
labs(
x = "HR (95% CI)",
y = "Region",
)
)
p <- plotly::layout(
p,
plot_bgcolor = "transparent",
paper_bgcolor = "transparent",
legend = list(bgcolor = "rgba(255,255,255,0)"),
dragmode = "false"
)
p
filtered_data <- hr_main %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri" &
model == "AT")
p <- ggplotly(
ggplot(data = filtered_data, aes(x = hr_estimate, y = region)) + geom_point() + theme_bw() +
geom_errorbarh(aes(
xmin = hr_ci_lower,
xmax = hr_ci_upper,
height = 0.05
)) +
labs(x = "HR (95% CI)", y = "Region", )
)
p <- plotly::layout(
p,
plot_bgcolor = "transparent",
paper_bgcolor = "transparent",
legend = list(bgcolor = "rgba(255,255,255,0)"),
dragmode = "false",
)
p
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filtered_data <- hr_sex %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri")
filtered_data <- filtered_data %>%
filter(model == input$model_subgroup)
filtered_data <- hr_sex %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri")
filtered_data <- filtered_data %>%
filter(model == "ITT")
p <- ggplotly(
ggplot(
data = filtered_data,
aes(
x = female_hr_estimate,
y = male_hr_estimate,
colour = factor(region)
)
) + geom_point() + theme_bw() +
geom_errorbar(aes(ymin = male_hr_ci_lower, ymax = male_hr_ci_upper, width = 0.05)) +
geom_errorbarh(aes(xmin = female_hr_ci_lower, xmax = female_hr_ci_upper, height = 0.05)) +
geom_abline(
intercept = 0,
slope = 1,
linetype = 'dashed'
) +
xlim(find_lim(filtered_data)) + ylim(find_lim(filtered_data)) +
labs(
fill = 'Region',
x = "Female",
y = "Male",
color = "Region"
)
)
p
filtered_data <- hr_sex %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri")
filtered_data <- filtered_data %>%
filter(model == "AT")
p <- ggplotly(
ggplot(
data = filtered_data,
aes(
x = female_hr_estimate,
y = male_hr_estimate,
colour = factor(region)
)
) + geom_point() + theme_bw() +
geom_errorbar(aes(ymin = male_hr_ci_lower, ymax = male_hr_ci_upper, width = 0.05)) +
geom_errorbarh(aes(xmin = female_hr_ci_lower, xmax = female_hr_ci_upper, height = 0.05)) +
geom_abline(
intercept = 0,
slope = 1,
linetype = 'dashed'
) +
xlim(find_lim(filtered_data)) + ylim(find_lim(filtered_data)) +
labs(
fill = 'Region',
x = "Female",
y = "Male",
color = "Region"
)
)
p
runApp()
filtered_data <- hr_year %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri")
filtered_data <- filtered_data %>%
filter(model == "ITT")
p <- ggplotly(
ggplot(
data = filtered_data,
aes(
x = x2020_hr_estimate,
y = x2019_hr_estimate,
colour = factor(region)
)
) + geom_point() + theme_bw() +
geom_errorbar(aes(ymin = x2019_hr_ci_lower, ymax = x2019_hr_ci_upper), width = 0.05) +
geom_errorbarh(aes(xmin = x2020_hr_ci_lower, xmax = x2020_hr_ci_upper), height = 0.05) +
geom_abline(
intercept = 0,
slope = 1,
linetype = 'dashed'
) +
xlim(find_lim(filtered_data)) + ylim(find_lim(filtered_data)) +
labs(
fill = 'Region',
x = "2020",
y = "2019",
color = "Region"
)
)
p
runApp()
?radioButtons
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplotly
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(smd)
runApp()
runApp()
# Load data
path_data <- "./data"
x_by_month <- read_excel(paste(path_data, 'x_by_month.xlsx', sep = '/'))
x_by_month_all <- x_by_month %>%
group_by(year_month, region, comparison) %>%
summarise(num_patients = sum(num_patients), .groups = 'drop') %>%
mutate(trt = 3)
covs <- read_excel(paste(path_data, 'covs.xlsx', sep = '/'))
ps_coef <- read_excel(paste(path_data, 'ps_coef.xlsx', sep = '/'))
ps_bal <- readRDS(paste(path_data, 'ps_bal.rds', sep = '/'))
smd <- read_excel(paste(path_data, 'smd.xlsx', sep = '/'))
hr_main <- read_excel(paste(path_data, 'hr_main.xlsx', sep = '/'))
hr_sens <- read_excel(paste(path_data, 'hr_sens.xlsx', sep = '/'))
y_by_month <- read_excel(paste(path_data, 'y_by_month.xlsx', sep = '/'))
marg_bias <- read_excel(paste(path_data, 'marg_bias.xlsx', sep = '/'))
hr_age <- read_excel(paste(path_data, 'hr_age.xlsx', sep = '/'))
hr_sex <- read_excel(paste(path_data, 'hr_sex.xlsx', sep = '/'))
hr_year <- read_excel(paste(path_data, 'hr_year.xlsx', sep = '/'))
View(covs)
runApp()
#### TESTING ####
covs_bc <- covs %>%
mutate_if(is.numeric, ~ . * 2,
region = "bc")
View(covs_bc)
covs <- rbind(covs, covs_bc)
runApp()
runApp()
#### TESTING ####
covs_bc <- covs %>%
mutate_if(is.numeric, ~ . * 2,
region = "bc")
#### TESTING ####
covs_bc <- covs %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(region = "bc")
covs <- read_excel(paste(path_data, 'covs.xlsx', sep = '/'))
#### TESTING ####
covs_bc <- covs %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(region = "bc")
covs <- rbind(covs, covs_bc)
runApp()
View(x_by_month_all)
View(x_by_month)
runApp()
View(x_by_month)
runApp()
#### TESTING START ####
x_by_month_bc <- x_by_month %>%
mutate_if(is.numeric &, ~ . * 2) %>%
#### TESTING START ####
x_by_month_bc <- x_by_month %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(region = "bc")
View(x_by_month_bc)
runApp()
runApp()
runApp()
View(smd)
runApp()
runApp()
View(ps_coef)
View(covs_bc)
runApp()
# Load data
path_data <- "./data"
x_by_month <- read_excel(paste(path_data, 'x_by_month.xlsx', sep = '/'))
covs <- read_excel(paste(path_data, 'covs.xlsx', sep = '/'))
ps_coef <- read_excel(paste(path_data, 'ps_coef.xlsx', sep = '/'))
ps_bal <- readRDS(paste(path_data, 'ps_bal.rds', sep = '/'))
smd <- read_excel(paste(path_data, 'smd.xlsx', sep = '/'))
y_by_month <- read_excel(paste(path_data, 'y_by_month.xlsx', sep = '/'))
hr_main <- read_excel(paste(path_data, 'hr_main.xlsx', sep = '/'))
hr_sens <- read_excel(paste(path_data, 'hr_sens.xlsx', sep = '/'))
marg_bias <- read_excel(paste(path_data, 'marg_bias.xlsx', sep = '/'))
hr_age <- read_excel(paste(path_data, 'hr_age.xlsx', sep = '/'))
hr_sex <- read_excel(paste(path_data, 'hr_sex.xlsx', sep = '/'))
hr_year <- read_excel(paste(path_data, 'hr_year.xlsx', sep = '/'))
#### TESTING START ####
x_by_month_bc <- x_by_month %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(trt = if_else(trt == 2, 1, 0)) %>%
mutate(region = "bc")
x_by_month <- rbind(x_by_month, x_by_month_bc)
covs_bc <- covs %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(region = "bc") %>%
filter(!cov_name %in% c("arrhythmia"))
covs <- rbind(covs, covs_bc)
test <- covs %>% filter(cov_name == "arrhythmia")
View(test)
runApp()
runApp()
runApp()
?hchart
?hcaes
runApp()
runApp()
runApp()
# define colors for different regions
region_colors <- c(
"cprd" = "#003f5c",
"bc" = "#bc5090",
"ontario" = "#ffa600"
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hr_year_bc <- hr_year %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(region = "bc")
hr_year <- rbind(hr_year, hr_year_bc)
filtered_data <- hr_sex %>%
filter(outcome == "death" &
comparison == "snri_vs_ssri")
filtered_data <- filtered_data %>%
filter(model == "ITT")
View(filtered_data)
# Load data
path_data <- "./data"
x_by_month <- read_excel(paste(path_data, 'x_by_month.xlsx', sep = '/'))
covs <- read_excel(paste(path_data, 'covs.xlsx', sep = '/'))
ps_coef <- read_excel(paste(path_data, 'ps_coef.xlsx', sep = '/'))
ps_bal <- readRDS(paste(path_data, 'ps_bal.rds', sep = '/'))
smd <- read_excel(paste(path_data, 'smd.xlsx', sep = '/'))
y_by_month <- read_excel(paste(path_data, 'y_by_month.xlsx', sep = '/'))
hr_main <- read_excel(paste(path_data, 'hr_main.xlsx', sep = '/'))
hr_sens <- read_excel(paste(path_data, 'hr_sens.xlsx', sep = '/'))
marg_bias <- read_excel(paste(path_data, 'marg_bias.xlsx', sep = '/'))
hr_age <- read_excel(paste(path_data, 'hr_age.xlsx', sep = '/'))
hr_sex <- read_excel(paste(path_data, 'hr_sex.xlsx', sep = '/'))
hr_year <- read_excel(paste(path_data, 'hr_year.xlsx', sep = '/'))
hr_year_bc <- hr_year %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(region = "bc")
View(hr_year_bc)
hr_year <- rbind(hr_year, hr_year_bc)
View(hr_year)
options(scipen = 999)
View(hr_year)
View(hr_year_bc)
p <- ggplotly(
ggplot(
data = filtered_data,
aes(x = female_hr_estimate, y = male_hr_estimate, color = region)
) + geom_point() + theme_bw() +
geom_errorbar(
aes(ymin = male_hr_ci_lower, ymax = male_hr_ci_upper, width = 0.05)
) +
geom_errorbarh(
aes(
xmin = female_hr_ci_lower,
xmax = female_hr_ci_upper,
height = 0.05
)
) +
geom_abline(
intercept = 0,
slope = 1,
linetype = 'dashed'
) +
xlim(find_lim(filtered_data)) + ylim(find_lim(filtered_data)) +
labs(fill = 'Region', x = "Female", y = "Male", ) +
scale_color_manual(values = region_colors)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Load data
path_data <- "./data"
x_by_month <- read_excel(paste(path_data, 'x_by_month.xlsx', sep = '/'))
covs <- read_excel(paste(path_data, 'covs.xlsx', sep = '/'))
ps_coef <- read_excel(paste(path_data, 'ps_coef.xlsx', sep = '/'))
ps_bal <- readRDS(paste(path_data, 'ps_bal.rds', sep = '/'))
smd <- read_excel(paste(path_data, 'smd.xlsx', sep = '/'))
y_by_month <- read_excel(paste(path_data, 'y_by_month.xlsx', sep = '/'))
hr_main <- read_excel(paste(path_data, 'hr_main.xlsx', sep = '/'))
hr_sens <- read_excel(paste(path_data, 'hr_sens.xlsx', sep = '/'))
marg_bias <- read_excel(paste(path_data, 'marg_bias.xlsx', sep = '/'))
hr_age <- read_excel(paste(path_data, 'hr_age.xlsx', sep = '/'))
hr_sex <- read_excel(paste(path_data, 'hr_sex.xlsx', sep = '/'))
hr_year <- read_excel(paste(path_data, 'hr_year.xlsx', sep = '/'))
#### TESTING START ####
x_by_month_bc <- x_by_month %>%
mutate_if(is.numeric, ~ . * 2) %>%
mutate(trt = if_else(trt == 2, 1, 0)) %>%
mutate(region = "bc")
x_by_month <- rbind(x_by_month, x_by_month_bc)
View(x_by_month)
runApp()
runApp()
runApp()
x_by_month %<>%
mutate(num_patients = if_else(region = "bc" & year_month = "2019-02", NA, num_patients))
x_by_month %<>%
mutate(num_patients = if_else(region == "bc" & year_month == "2019-02", NA, num_patients))
runApp()
runApp()
View(covs)
runApp()
runApp()
runApp()
runApp()
runApp()
# Load data
path_data <- "./data"
x_by_month <- read_excel(paste(path_data, 'x_by_month.xlsx', sep = '/'))
covs <- read_excel(paste(path_data, 'covs.xlsx', sep = '/'))
ps_coef <- read_excel(paste(path_data, 'ps_coef.xlsx', sep = '/'))
ps_bal <- readRDS(paste(path_data, 'ps_bal.rds', sep = '/'))
smd <- read_excel(paste(path_data, 'smd.xlsx', sep = '/'))
y_by_month <- read_excel(paste(path_data, 'y_by_month.xlsx', sep = '/'))
hr_main <- read_excel(paste(path_data, 'hr_main.xlsx', sep = '/'))
hr_sens <- read_excel(paste(path_data, 'hr_sens.xlsx', sep = '/'))
marg_bias <- read_excel(paste(path_data, 'marg_bias.xlsx', sep = '/'))
hr_age <- read_excel(paste(path_data, 'hr_age.xlsx', sep = '/'))
hr_sex <- read_excel(paste(path_data, 'hr_sex.xlsx', sep = '/'))
hr_year <- read_excel(paste(path_data, 'hr_year.xlsx', sep = '/'))
View(ps_coef)
runApp()
runApp()
runApp()
runApp()
View(ps_coef)
runApp()
View(smd)
runApp()
runApp()
View(ps_coef)
runApp()
# Load data
path_data <- "./data"
x_by_month <- read_excel(paste(path_data, 'x_by_month.xlsx', sep = '/'))
covs <- read_excel(paste(path_data, 'covs.xlsx', sep = '/'))
ps_coef <- read_excel(paste(path_data, 'ps_coef.xlsx', sep = '/'))
View(ps_coef)
ps_coef$cov_name <- sub("1$", "", ps_coef$cov_name) # clean var name
View(ps_coef)
runApp()
